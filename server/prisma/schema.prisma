datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum EnumAdminRole {
  ROOTADMIN
  ADMIN
}

enum EnumUserRole {
  USER
  ADMIN
  ROOTADMIN
}

enum EnumOrderStatus {
  PENDING
  CANCELED
  AWAITING_PAYMENT
  PAYED
  SHIPPED
  DELIVERED
  FINISHED
}

model User {
  id          Int        @id @unique @default(autoincrement())
  username    String     @unique
  first_name  String
  last_name   String
  email       String     @unique
  password    String
  phone       String?    @default("-")
  address     String?
  is_verified Boolean    @default(false)
  image       String?
  reviews     Review[]
  rating      Int?
  orders      Order[]
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  wishlist    Wishlist[]
}

model Admin {
  id               Int           @id @unique @default(autoincrement())
  first_name       String
  last_name        String
  email            String        @unique
  password         String
  role             EnumAdminRole
  is_active        Boolean?      @default(true)
  created_products Product[]
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
}

model Category {
  id         Int        @id @unique @default(autoincrement())
  name       String     @unique
  parent_id  Int?
  parent     Category?  @relation("CategoryToChildren", fields: [parent_id], references: [id])
  slug       String?
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  products   Product[]
  children   Category[] @relation("CategoryToChildren")
}

model Product {
  id          Int                @id @unique @default(autoincrement())
  name        String             @unique
  description String
  sku         String             @unique
  base_price  Int
  slug        String?            @unique
  stock       Int?               @default(0)
  rating      Int?               @default(0)
  reviews     Review[]
  admin       Admin?             @relation(fields: [admin_id], references: [id])
  admin_id    Int?
  created_at  DateTime           @default(now())
  updated_at  DateTime           @updatedAt
  variants    ProductVariant[]
  categories  Category[]
  images      ProductImage[]
  promotions  ProductPromotion[]
  wishlist    Wishlist[]
  attributes  ProductAttribute[]
}

model Attribute {
  id         Int                     @id @default(autoincrement())
  name       String                  @unique
  values     ProductAttributeValue[]
  created_at DateTime                @default(now())
  updated_at DateTime                @updatedAt
}

model ProductAttribute {
  id         Int                     @id @default(autoincrement())
  name       String                  @unique
  values     ProductAttributeValue[]
  products   Product[]
  created_at DateTime                @default(now())
  updated_at DateTime                @updatedAt
}

model ProductAttributeValue {
  id                 Int                @id @default(autoincrement())
  value              String             @unique
  created_at         DateTime           @default(now())
  updated_at         DateTime           @updatedAt
  product_attributes ProductAttribute[]
  attributes         Attribute[]
}

model ProductVariant {
  id                 Int                       @id @unique @default(autoincrement())
  product_id         Int?
  product            Product?                  @relation(fields: [product_id], references: [id])
  price              Int
  stock              Int
  product_image      ProductImage?
  product_image_id   Int?
  variant_attributes ProductVariantAttribute[]
  created_at         DateTime                  @default(now())
  updated_at         DateTime                  @updatedAt
  order_items        OrderItem[]
  wishlist           Wishlist[]
}

model ProductVariantAttribute {
  id                 Int             @id @unique @default(autoincrement())
  name               String
  value              String
  product_variant    ProductVariant? @relation(fields: [product_variant_id], references: [id])
  product_variant_id Int?

  // @@unique([name, value, ])
}

model Wishlist {
  id                 Int             @id @unique @default(autoincrement())
  user_id            Int
  user               User            @relation(fields: [user_id], references: [id])
  product_id         Int?
  product            Product?        @relation(fields: [product_id], references: [id])
  product_variant_id Int?
  product_variant    ProductVariant? @relation(fields: [product_variant_id], references: [id])
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt
}

model ProductImage {
  id                 Int             @id @unique @default(autoincrement())
  product            Product?        @relation(fields: [product_id], references: [id])
  product_id         Int?
  product_variant    ProductVariant? @relation(fields: [product_variant_id], references: [id])
  product_variant_id Int?            @unique
  name               String
  url                String          @unique
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt
  is_main            Boolean         @default(false)
}

enum EnumDiscountType {
  FIXED
  PERCENTAGE
}

model Promotion {
  id            Int                @id @unique @default(autoincrement())
  name          String
  description   String?
  start_date    DateTime
  discount_type EnumDiscountType
  end_date      DateTime
  created_at    DateTime           @default(now())
  updated_at    DateTime           @updatedAt
  promotions    ProductPromotion[]
}

model ProductPromotion {
  id           Int       @id @unique @default(autoincrement())
  product      Product   @relation(fields: [product_id], references: [id])
  product_id   Int
  promotion    Promotion @relation(fields: [promotion_id], references: [id])
  promotion_id Int
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
}

enum EnumReviewStatus {
  PENDING
  APPROVED
  REJECTED
}

model Review {
  id         Int               @id @unique @default(autoincrement())
  comment    String
  product    Product?          @relation(fields: [product_id], references: [id])
  product_id Int?
  user       User?             @relation(fields: [user_id], references: [id])
  user_id    Int?
  status     EnumReviewStatus? @default(PENDING)
  created_at DateTime          @default(now())
  updated_at DateTime          @updatedAt
}

model Order {
  id          Int             @id @unique @default(autoincrement())
  user        User?           @relation(fields: [user_id], references: [id])
  user_id     Int?
  total_price Int
  status      EnumOrderStatus @default(PENDING)
  order_items OrderItem[]
  created_at  DateTime        @default(now())
  updated_at  DateTime        @updatedAt
}

model OrderItem {
  id                 Int             @id @unique @default(autoincrement())
  order              Order?          @relation(fields: [order_id], references: [id])
  order_id           Int
  product_variant    ProductVariant? @relation(fields: [product_variant_id], references: [id])
  product_variant_id Int
  quantity           Int             @default(1)
  price              Int
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt
}
