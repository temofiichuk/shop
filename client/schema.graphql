"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

type Admin {
  id: Int!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  role: String!
  is_active: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
}

type Attribute {
  id: Int!
  name: String!
  values: [ProductAttributeValue!]!
  product: Product!
  product_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

type AuthResponse {
  user: AuthUser
  accessToken: String!
  refreshToken: String!
}

type AuthUser {
  id: Float!
  role: EnumUserRole!
  first_name: String!
  last_name: String!
  email: String!
}

type Category {
  id: Int!
  name: String!
  parent_id: Int
  parent: Category!
  slug: String!
  created_at: DateTime!
  updated_at: DateTime!
  children: [Category!]!
}

input ConnectCategoryInput {
  id: Int!
}

input CreateAdminInput {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  role: String!
}

input CreateAttributeInput {
  name: String!
  values: [CreateProductAttributeValueInput!]!
}

input CreateCategoryInput {
  name: String!
  parent_id: Int = 0
  slug: String
}

input CreateOrderInput {
  user_id: Int
  total_price: Int!
  order_items: [CreateOrderItemInput!]!
}

input CreateOrderItemInput {
  order_id: Int!
  product_variant_id: Int!
  quantity: Int!
  price: Int!
}

input CreateProductAttributeInput {
  name: String!
  values: [CreateProductAttributeValueInput!]!
}

input CreateProductAttributeValueInput {
  value: String!
}

input CreateProductCategoryInput {
  product_id: Int!
  category_id: Int!
}

input CreateProductImageInput {
  product_id: Int!
  name: String!
  url: String!
  is_main: Boolean! = false
}

input CreateProductInput {
  name: String!
  description: String!
  sku: String!
  base_price: Int!
  stock: Int = 0
  attributes: [CreateProductAttributeInput!]!
  variants: [CreateProductVariantInput!]!
  categories: [ConnectCategoryInput!]!
}

input CreateProductPromotionInput {
  product_id: Int!
  promotion_id: Int!
}

input CreateProductVariantAttributeInput {
  name: String!
  value: String!
}

input CreateProductVariantInput {
  price: Int!
  stock: Int!
  sku: String
  variant_attributes: [CreateProductVariantAttributeInput!]!
  product_image_id: Int
}

input CreatePromotionInput {
  name: String!
  description: String
  discount_type: EnumDiscountType!
  start_date: DateTime!
  end_date: DateTime!
}

input CreateReviewInput {
  comment: String!
  product_id: Int
  user_id: Int
  status: EnumReviewStatus!
}

input CreateUserInput {
  username: String!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  phone: String!
  image: String!
}

input CreateWishlistInput {
  user_id: Int!
  product_id: Int
  product_variant_id: Int
}

input DateFilter {
  equals: DateTime
  gt: DateTime
  lt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum EnumDiscountType {
  FIXED
  PERCENTAGE
}

enum EnumReviewStatus {
  PENDING
  APPROVED
  REJECTED
}

enum EnumUserRole {
  USER
  ADMIN
  ROOTADMIN
}

input FilterProductInput {
  name: StringFilter!
  date: DateFilter!
  price: IntFilter!
}

input FilterUserInput {
  pagination: PaginationInput!
}

input IntFilter {
  equals: Float
  lt: Float
  gt: Float
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  adminCreate(createAdminInput: CreateAdminInput!): Admin!
  adminUpdate(updateAdminInput: UpdateAdminInput!): Admin!
  adminRemove: Admin!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createAttributeValue(data: CreateAttributeInput!): Attribute!
  updateAttributeValue(data: UpdateAttributeInput!): Attribute!
  removeAttributeValue(id: Int!): Attribute!
  createProductAttributeValue(createData: CreateProductAttributeValueInput!): ProductAttributeValue!
  updateProductAttributeValue(updateData: UpdateProductAttributeValueInput!): ProductAttributeValue!
  removeProductAttributeValue(id: Int!): ProductAttributeValue!
  createProductCategory(data: CreateProductCategoryInput!): ProductCategory!
  updateProductCategory(data: UpdateProductCategoryInput!): ProductCategory!
  deleteProductCategory(id: Int!): ProductCategory!
  createProduct(data: CreateProductInput!): Product!
  updateProduct(data: UpdateProductInput!): Product!
  deleteProduct(id: Int!): Product!
  createProductVariant(createData: CreateProductVariantInput!): ProductVariant!
  updateProductVariant(updateData: UpdateProductVariantInput!): ProductVariant!
  removeProductVariant(id: Int!): ProductVariant!
  addToWishlist(data: CreateWishlistInput!): Wishlist!
  updateWishlist(id: Int!, data: UpdateWishlistInput!): Wishlist!
  deleteFromWishlist(id: Int!): Wishlist!
  createPromotion(data: CreatePromotionInput!): Promotion!
  updatePromotion(id: Int!, data: UpdatePromotionInput!): Promotion!
  deletePromotion(id: Int!): Promotion!
  createProductPromotion(data: CreateProductPromotionInput!): ProductPromotion!
  updateProductPromotion(data: UpdateProductPromotionInput!): ProductPromotion!
  deleteProductPromotion(id: Int!): ProductPromotion!
  createReview(data: CreateReviewInput!): Review!
  updateReview(data: UpdateReviewInput!): Review!
  deleteReview(id: Int!): Review!
  createOrder(data: CreateOrderInput!): Order!
  updateOrder(data: UpdateOrderInput!): Order!
  deleteOrder(id: Int!): Order!
  createOrderItem(data: CreateOrderItemInput!): OrderItem!
  updateOrderItem(data: UpdateOrderItemInput!): OrderItem!
  deleteOrderItem(id: Int!): OrderItem!
  createProductImage(data: CreateProductImageInput!): ProductImage!
  updateProductImage(data: UpdateProductImageInput!): ProductImage!
  deleteProductImage(id: Int!): ProductImage!
  userCreate(createUserInput: CreateUserInput!): User!
  userUpdate(updateUserInput: UpdateUserInput!): User!
  userRemove: User!
}

type Order {
  id: Int!
  user: User!
  user_id: Int
  total_price: Int!
  status: String!
  order_items: [OrderItem!]!
  created_at: DateTime!
  updated_at: DateTime!
}

input OrderFilterInput {
  created_at: DateFilter!
}

type OrderItem {
  id: Int!
  order: Order!
  order_id: Int
  product_variant: ProductVariant!
  product_variant_id: Int!
  quantity: Int!
  price: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

input PaginationInput {
  page: Float!
  take: Float!
}

type Product {
  id: Int!
  name: String!
  description: String!
  sku: String!
  base_price: Int!
  slug: String!
  stock: Int!
  rating: Int!
  reviews: [Review!]!
  admin: Admin!
  admin_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
  variants: [ProductVariant!]!
  categories: [ProductCategory!]!
  images: [ProductImage!]!
  promotions: [ProductPromotion!]!
  wishlist: [Wishlist!]!
  attributes: [ProductAttribute!]!
}

type ProductAttribute {
  id: Int!
  name: String!
  values: [ProductAttributeValue!]!
  product: Product!
  product_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

type ProductAttributeValue {
  id: Int!
  value: String!
  product_attribute: ProductAttribute!
  product_attribute_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

type ProductCategory {
  id: Int!
  product: Product!
  product_id: Int!
  category: Category!
  category_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

type ProductCount {
  count: Float!
}

type ProductImage {
  id: Int!
  product: Product!
  product_id: Int
  name: String!
  url: String!
  created_at: DateTime!
  updated_at: DateTime!
  is_main: Boolean!
}

type ProductPromotion {
  id: Int!
  product: Product!
  product_id: Int!
  promotion: Promotion!
  promotion_id: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

type ProductVariant {
  id: Int!
  product_id: Int!
  product: Product!
  price: Int!
  stock: Int!
  created_at: DateTime!
  updated_at: DateTime!
  order_items: [OrderItem!]!
  wishlist: [Wishlist!]!
  product_image: [ProductImage!]!
  product_image_id: Int
  variant_attributes: [ProductVariantAttribute!]!
}

type ProductVariantAttribute {
  id: Int!
  name: String!
  value: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Promotion {
  id: Int!
  name: String!
  description: String!
  discount_type: EnumDiscountType!
  start_date: DateTime
  end_data: DateTime
  created_at: DateTime!
  updated_at: DateTime!
  promotions: [ProductPromotion!]!
}

type Query {
  authAdminLogin(loginInput: LoginInput!): AuthResponse!
  authAdminNewTokens(refresh_token: String!): AuthResponse!
  authUserLogin(loginInput: LoginInput!): AuthResponse!
  authUserNewTokens(refresh_token: String!): AuthResponse!
  adminById(id: Int!): Admin!
  categories: [Category!]!
  category(id: Int!): Category!
  attributes: [Attribute!]!
  attribute(id: Int!): Attribute!
  productAttributes: [ProductAttribute!]!
  productAttribute(id: Int!): ProductAttribute!
  productCategories: [ProductCategory!]!
  productCategory(id: Int!): ProductCategory!
  products(pagination: PaginationInput, filter: FilterProductInput): [Product!]!
  productsCount: ProductCount!
  product(id: Int!): Product!
  productVariants(product_id: Float!): [ProductVariant!]!
  productVariant(id: Int!): ProductVariant!
  userWishlist: [Wishlist!]!
  wishlists: [Wishlist!]!
  wishlistItem(id: Int!): Wishlist!
  promotions: [Promotion!]!
  promotion(id: Int!): Promotion!
  productPromotions: [ProductPromotion!]!
  productPromotion(id: Int!): ProductPromotion!
  reviews: [Review!]!
  review(id: Int!): Review!
  orders(filter: OrderFilterInput): [Order!]!
  order(id: Int!): Order!
  orderItems: [OrderItem!]!
  orderItem(id: Int!): OrderItem!
  productImages(product_id: Float!): [ProductImage!]!
  productImage(id: Int!): ProductImage!
  revenue(revenueInput: RevenueInput!): Revenue!
  revenueAnalytics(revenueInput: RevenueInput!): [RevenueAnalytics!]!
  users(filter: FilterUserInput): [User!]!
  userById(id: Int!): User!
}

type Revenue {
  current: Int!
  previous: Int!
}

type RevenueAnalytics {
  period: String!
  revenue: Int!
}

input RevenueInput {
  period: String!
}

type Review {
  id: Int!
  comment: String!
  product: Product!
  product_id: Int
  user: User!
  user_id: Int
  status: EnumReviewStatus!
  created_at: DateTime!
  updated_at: DateTime!
}

input StringFilter {
  equals: String
  contains: String
  startsWith: String
  endsWith: String
}

input UpdateAdminInput {
  first_name: String
  last_name: String
  email: String
  password: String
  role: String
  id: Int!
}

input UpdateAttributeInput {
  name: String
  values: [CreateProductAttributeValueInput!]
  id: Int!
}

input UpdateCategoryInput {
  name: String
  parent_id: Int = 0
  slug: String
  id: Int!
}

input UpdateOrderInput {
  user_id: Int
  total_price: Int
  order_items: [CreateOrderItemInput!]
  id: Int!
}

input UpdateOrderItemInput {
  order_id: Int
  product_variant_id: Int
  quantity: Int
  price: Int
  id: Int!
}

input UpdateProductAttributeInput {
  name: String
  values: [CreateProductAttributeValueInput!]
  id: Int!
}

input UpdateProductAttributeValueInput {
  value: String
  id: Int!
}

input UpdateProductCategoryInput {
  product_id: Int
  category_id: Int
  id: Int!
}

input UpdateProductImageInput {
  product_id: Int
  name: String
  url: String
  is_main: Boolean = false
  id: Int!
}

input UpdateProductInput {
  name: String
  description: String
  sku: String
  base_price: Int
  stock: Int = 0
  categories: [ConnectCategoryInput!]
  id: Int!
  attributes: [UpdateProductAttributeInput!]!
  variants: [UpdateProductVariantInput!]!
}

input UpdateProductPromotionInput {
  product_id: Int
  promotion_id: Int
  id: Int!
}

input UpdateProductVariantAttributeInput {
  name: String!
  value: String!
  id: Int!
}

input UpdateProductVariantInput {
  price: Int!
  stock: Int!
  sku: String
  product_image_id: Int
  id: Int!
  variant_attributes: [UpdateProductVariantAttributeInput!]!
}

input UpdatePromotionInput {
  name: String
  description: String
  discount_type: EnumDiscountType
  start_date: DateTime
  end_date: DateTime
  id: Int!
}

input UpdateReviewInput {
  comment: String
  product_id: Int
  user_id: Int
  status: EnumReviewStatus
  id: Int!
}

input UpdateUserInput {
  username: String
  first_name: String
  last_name: String
  email: String
  password: String
  phone: String
  image: String
  id: ID!
}

input UpdateWishlistInput {
  user_id: Int
  product_id: Int
  product_variant_id: Int
  id: Int!
}

type User {
  id: Int!
  username: String!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  phone: String
  address: String
  image: String
  is_verified: Boolean!
  reviews: [Review!]!
  rating: Float
  created_at: DateTime!
  updated_at: DateTime!
}

type Wishlist {
  id: Int!
  user: User!
  user_id: Int!
  product: Product!
  product_id: Int
  product_variant: ProductVariant!
  product_variant_id: Int
  created_at: DateTime!
  updated_at: DateTime!
}

