# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserAuthData {
    id: Float!
    name: String!
    email: String!
    role: String!
}

type AuthData {
    user: UserAuthData!
    accessToken: String!
    refreshToken: String!
}

type Image {
    id: Float!
    product_id: Float!
    name: String!
    url: String!
}

type FavoriteProduct {
    id: Float!
    name: String!
    price: Float!
    images: [Image!]!
    slug: String!
}

type User {
    id: ID!
    name: String!
    email: String!
    password: String!
    phone: String!
    avatar: String!
}

type UserResponse {
    id: ID!
    name: String!
    email: String!
    phone: String!
    avatar: String!
    favorites: [FavoriteProduct!]!
}

type SuccessOutput {
    message: String!
}

type Admin {
    id: ID!
    name: String!
    email: String!
    password: String!
    phone: String!
    avatar: String!
    type: String!
}

type AdminAvatar {
    avatar: String
}

type CategoryType {
    id: Int!
    name: String!
    categories: [Category!]!
    created_at: DateTime!
    updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
    id: Int!
    name: String!
    type: CategoryType!
    type_name: String!
    parent_id: Int
    parent: Category!
    children: [Category!]!
    products: [Product!]!
    created_at: DateTime!
    updated_at: DateTime!
}

type ProductDescription {
    id: Int!
    head: String!
    body: String!
}

type ProductImage {
    id: Int!
    name: String!
    url: String!
    is_main: Boolean!
}

type Product {
    id: Int!
    name: String!
    price: Float!
    slug: String!
    descriptions: [ProductDescription!]!
    categories: [Category!]!
    images: [ProductImage!]!
    quantity: Float!
    stock: Float!
}

type Review {
    id: Int!
    rating: Int!
    comment: String!
    created_at: DateTime!
    updated_at: DateTime!
    product: [Product!]!
    product_id: Int!
    user: User!
    user_id: Int!
    status: String!
}

type AttributeValue {
    value: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Attribute {
    id: Int!
    name: String!
    values: [AttributeValue!]!
    created_at: DateTime!
    updated_at: DateTime!
}

type Query {
    authLogin(loginInput: LoginUserInput!): AuthData!
    authAdminLogin(loginAdminInput: LoginAdminInput!): AuthData!
    authNewTokens(refresh_token: String!): AuthData!
    userById(id: Int!): User!
    adminGetAll: [Admin!]!
    adminGetAvatar: AdminAvatar!
    productBySearch(pattern: String!): [Product!]!
    productGetByID(id: Float!): Product!
    productGetMany(skip: Float!, take: Float!): [Product!]!
    productCount: Int!
    productSetMainImage(product_id: Float!, image_id: Float!): Product!
    reviewGetAllByStatus(status: String!): [Review!]!
    reviewFindOne(pattern: String!): Review!
    reviewGetByProduct(id: Float!): Review!
    reviewGetByUser: Review!
    getCategories(parent_id: Float): [Category!]!
    getCategoryTree: [Category!]!
    attributeGetAll: [Attribute!]!
    getCategoryTypes: [CategoryType!]!
}

input LoginUserInput {
    email: String!
    password: String!
    role: String!
}

input LoginAdminInput {
    email: String!
    password: String!
    role: String!
}

type Mutation {
    userCreate(createUserInput: CreateUserInput!): SuccessOutput!
    userUpdate(updateUserInput: UpdateUserInput!): User!
    userRemove(id: Float!): User!
    userToggleFavorite(product_id: Int!): UserResponse!
    adminCreate(createAdminInput: CreateAdminInput!): Admin!
    adminUpdate(updateAdminInput: UpdateAdminInput!): Admin!
    adminRemove(id: Float!): Admin!
    productCreate(createProductInput: CreateProductInput!): Product!
    productUpdate(updateProductInput: UpdateProductInput!): Product!
    productRemove(id: Float!): Product!
    reviewCreate(createReviewInput: CreateReviewInput!): Review!
    reviewUpdateStatus(id: Float!, status: String!): Review!
    reviewRemove(id: Float!): Review!
    createCategory(createCategoryInput: CreateCategoryInput!): Category!
    updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
    removeCategory(id: Float!): Category!
    attributeCreate(createAttributeInput: CreateAttributeInput!): Attribute!
    attributeUpdate(updateAttributeInput: UpdateAttributeInput!): Attribute!
    attributeRemove(id: Float!): Attribute!
    createCategoryType(createCategoryTypeInput: CreateCategoryTypeInput!): CategoryType!
    updateCategoryType(updateCategoryTypeInput: UpdateCategoryTypeInput!): CategoryType!
    removeCategoryType(id: Int!): CategoryType!
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
    phone: String!
    avatar: String!
}

input UpdateUserInput {
    name: String
    email: String
    password: String
    phone: String
    avatar: String
    id: ID!
}

input CreateAdminInput {
    name: String!
    email: String!
    password: String!
    avatar: String!
    type: String
}

input UpdateAdminInput {
    name: String
    email: String
    password: String
    avatar: String
    type: String
    id: Int!
}

input CreateProductInput {
    name: String!
    slug: String
    sku: String
    price: Int!
    combination_id: Int
    descriptions: [DescriptionInput!]
    stock: Int!
    rating: Int
    images: [ImageInput!]
    category_ids: [Int!]!
}

input DescriptionInput {
    head: String!
    body: String!
}

input ImageInput {
    name: String!
    url: String!
    is_main: Boolean!
}

input UpdateProductInput {
    name: String
    slug: String
    sku: String
    price: Int
    combination_id: Int
    stock: Int
    rating: Int
    images: [ImageInput!]
    category_ids: [Int!]
    id: Int!
    descriptions: [UpdateDescriptionInput!]!
}

input UpdateDescriptionInput {
    head: String
    body: String
    id: Int
}

input CreateReviewInput {
    rating: Int!
    comment: String!
    product_id: Int!
}

input CreateCategoryInput {
    name: String!
    type_name: String!
    parent_id: Float
}

input UpdateCategoryInput {
    name: String
    type_name: String
    parent_id: Float
    id: Int!
}

input CreateAttributeInput {
    name: String!
    values: [CreateAttributeValueInput!]!
}

input CreateAttributeValueInput {
    value: String!
}

input UpdateAttributeInput {
    name: String
    id: Int!
    values: [UpdateAttributeValueInput!]!
}

input UpdateAttributeValueInput {
    value: String
    id: Int
}

input CreateCategoryTypeInput {
    name: String!
}

input UpdateCategoryTypeInput {
    name: String
    id: Int!
}